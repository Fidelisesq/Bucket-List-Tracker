name: Bucket-List-Tracker Terraform Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: "Choose action (apply/destroy)"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform_deploy:
    runs-on: ubuntu-latest
    # Skip deploy if commit message contains 'destroy'
    if: github.event_name == 'push' && !contains(github.event.head_commit.message, 'destroy') || github.event.inputs.action == 'apply'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create terraform.tfvars
        run: |
          cat <<EOF > terraform.tfvars
          hosted_zone_id = "${{ secrets.HOSTED_ZONE_ID }}"
          oauth_token = "${{ secrets.OAUTH_TOKEN }}"
          EOF
        
      - name: Mask AWS Account ID in logs
        run: echo "::add-mask::${{ secrets.AWS_ACCOUNT_ID }}"

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
            TF_LOG: DEBUG

  terraform_destroy:
    runs-on: ubuntu-latest
    # Run destroy only if commit message contains 'destroy' or workflow_dispatch selects 'destroy'
    if: github.event_name == 'push' && contains(github.event.head_commit.message, 'destroy') || github.event.inputs.action == 'destroy'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create Terraform.tfvars file
        run: |
          cat <<EOF > terraform.tfvars
          hosted_zone_id = "${{ secrets.HOSTED_ZONE_ID }}"
          oauth_token = "${{ secrets.OAUTH_TOKEN }}"
          EOF

      - name: Initiate Terraform
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
